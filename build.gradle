
// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        buildToolsVersion = "33.0.0"
        minSdkVersion = 21
        compileSdkVersion = 33
        targetSdkVersion = 33
        kotlinVersion = "1.8.0"
        
        // Add billing version for consistent use across modules
        billingVersion = "7.1.1"
    }
    
    repositories {
        google()
        mavenCentral()
    }
    
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
    }
}

// Add custom task to create necessary placeholder files for CI builds
task ensureReactNativeModules {
    doLast {
        def rnModulesDir = new File("$rootDir/../node_modules/@react-native-community/cli-platform-android")
        if (!rnModulesDir.exists()) {
            rnModulesDir.mkdirs()
            
            def nativeModulesFile = new File(rnModulesDir, "native_modules.gradle")
            if (!nativeModulesFile.exists()) {
                nativeModulesFile.text = """
                // This is a placeholder file created by the build process
                def applyNativeModulesSettingsGradle = { settings ->
                    // No-op implementation for CI
                }
                
                def applyNativeModulesAppBuildGradle = { project ->
                    // No-op implementation for CI
                }
                
                ext {
                    applyNativeModulesSettingsGradle = this.&applyNativeModulesSettingsGradle
                    applyNativeModulesAppBuildGradle = this.&applyNativeModulesAppBuildGradle
                }
                """
            }
        }
        
        // Create assets directory and bundle file if needed
        def assetsDir = new File("$rootDir/app/src/main/assets")
        if (!assetsDir.exists()) {
            assetsDir.mkdirs()
        }
        
        def bundleFile = new File(assetsDir, "index.android.bundle")
        if (!bundleFile.exists()) {
            bundleFile.text = "// Placeholder bundle file created by build process"
        }
    }
}

// Make sure the ensureReactNativeModules task runs before any other tasks
gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        it.dependsOn(ensureReactNativeModules)
    }
}
