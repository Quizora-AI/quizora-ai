
name: Build and Sign Android App Bundle

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build and Sign AAB
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create React Native directory structure
        run: |
          # Create required directories for React Native
          mkdir -p node_modules/@react-native-community/cli-platform-android
          
          # Create placeholder native_modules.gradle file
          cat > node_modules/@react-native-community/cli-platform-android/native_modules.gradle << 'EOF'
          // This is a placeholder file for the build process
          import groovy.json.JsonSlurper

          def reactNativeModuleConfig = [:]
          def applyNativeModulesSettingsGradle = { settings ->
              // No-op function for CI builds
          }
          def applyNativeModulesAppBuildGradle = { project ->
              // No-op function for CI builds
          }

          ext {
              reactNativeModuleConfig = reactNativeModuleConfig
              applyNativeModulesSettingsGradle = this.&applyNativeModulesSettingsGradle
              applyNativeModulesAppBuildGradle = this.&applyNativeModulesAppBuildGradle
          }
          EOF

      - name: Bundle React Native JavaScript
        run: |
          # Create directory structure for assets
          mkdir -p android/app/src/main/assets
          
          # Create JavaScript bundle
          npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Decode keystore
        run: echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 -d > android/app/release.keystore

      - name: Create gradle.properties with signing configs
        run: |
          echo "MYAPP_UPLOAD_STORE_FILE=release.keystore" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.SIGNING_KEY_ALIAS }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.SIGNING_STORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.SIGNING_KEY_PASSWORD }}" >> android/gradle.properties

      - name: Build release AAB
        run: |
          cd android
          ./gradlew bundleRelease --no-daemon

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-bundle
          path: android/app/build/outputs/bundle/release/app-release.aab
          retention-days: 7

      - name: Generate APK for testing
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-apk
          path: android/app/build/outputs/apk/release/*.apk
          retention-days: 7

      - name: Clean up keystore
        run: rm -f android/app/release.keystore
