name: Build Android App Bundle

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make Gradlew Executable
      run: cd android && chmod +x ./gradlew
      
    - name: Update Gradle wrapper
      run: cd android && ./gradlew wrapper --gradle-version=7.6
      
    # Create local.properties with SDK location
    - name: Create local.properties
      run: |
        echo "sdk.dir=$ANDROID_HOME" > android/local.properties
        
    # Check keystore existence and create if needed
    - name: Setup Keystore
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
      run: |
        if [ -n "$KEYSTORE_BASE64" ] && [ -n "$KEY_PROPERTIES" ]; then
          echo "$KEYSTORE_BASE64" | base64 --decode > android/app/release.keystore
          echo "$KEY_PROPERTIES" > android/key.properties
        else
          echo "Warning: Keystore secrets not found. Building with debug configuration."
        fi
        
    # Build Release AAB
    - name: Build Android App Bundle
      run: cd android && ./gradlew bundleRelease --no-daemon
        
    # Upload AAB artifact
    - name: Upload AAB
      uses: actions/upload-artifact@v3
      with:
        name: app-release-bundle
        path: android/app/build/outputs/bundle/release/app-release.aab
        
    # Optional: Upload APK for testing
    - name: Build APK for testing
      run: cd android && ./gradlew assembleRelease --no-daemon
        
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-release-apk
        path: android/app/build/outputs/apk/release/app-release.apk
